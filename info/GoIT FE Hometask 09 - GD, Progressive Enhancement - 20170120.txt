progressive enhancement
===================================================================

https://habrahabr.ru/post/157115/

Что же такое progressive enhancement? Чаще всего этот термин переводят, как прогрессивное улучшение. Прогрессивное улучшение предполагает, что веб-интерфейсы должны создаваться поэтапно, циклически, от простого к сложному. На каждом из этапов должен получаться законченный веб-интерфейс, который будет лучше, красивее и удобнее предыдущего. Можно сказать, что сейчас таких этапов четыре:

a «Старый-добрый-HTML» этап
b CSS этап
c CSS3 этап
d JavaScript этап

or technically 

a Смысл документа, логическая разметка. Технология: HTML.
b Внешний вид. Технология: CSS.
c Безупречный внешний вид. Технология: CSS3.
d Взаимодействие, интерактивность, удобство. Технология: JavaScript.






{ Vendor Prefix } =====================================================

Vendor Prefix - 
--- Lately, the trend is to add experimental feature behind user-controlled flags and to work on smaller specifications that reaches stability much quicker.

https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix

https://en.wikipedia.org/wiki/CSS_hack#Prefix_filters


http://getbootstrap.com/getting-started/#template


===========================
https://teamtreehouse.com/community/media-queries-dont-work-in-ie8-and-earlier-any-way-to-get-around-this








****************************************************** POLYFills and related staff 

4. Polyfills // Javascript polyfills https://en.wikipedia.org/wiki/CSS_hack#Javascript_polyfills
	While Javascript feature detection and @supports rules can help to target browsers that require fallback functionality, 
	they will not address bugs in specific browsers or enable that advanced functionality. 

==> Polyfills, scripts that make behavior consistent across all browsers, 
		======> can be used to add support for new CSS rules (for example, media queries in IE 8) 
				as well as fix bugs in specific browsers (for example, fixing the implementation of viewport units in mobile Safari). 

		======> Since polyfills add or fix functionality in browsers that don't have it, they serve a different purpose than feature queries, but can be used in combination with them.
-------------------------------------


* How to Build a Responsive Website That Supports Older Browsers
https://zellwk.com/blog/support-for-older-browsers/

...... If we didn’t want to use polyfills with IE8, we might have to stick to older coding standards which will either take up a lot of time, or
 make the website obselete easily in the future. When thinking along these lines, 
it seems that the gain better development process outweighs the cons of the slight performance drop with polyfills, 
and its well worth the effort.

4.4 Respond.js ->
--------------------------------------------------------------------
* A fast & lightweight polyfill for min/max-width CSS3 Media Queries (for IE 6-8, and more)
https://github.com/scottjehl/Respond

* Respond.js is a polyfill for CSS min-width and max-width media queries. 
It is extremely lightweight (3kb minified / 1kb gzipped) and that ensures that the script is downloaded and ran as quickly as possible.


What is the use of respond JS?
respond.js. The goal of this script is to provide a fast and lightweight (3kb minified / 1kb gzipped) script to enable responsive web designs in browsers that don't support CSS3 Media Queries - in particular, Internet Explorer 8 and under.


4.5 Here are the 3 Polyfills You Might Want To Include In Your Project

4.5.1 { html5shiv }
==> It enables IE8 to support HTML 5 elements like <header> and <article> and you will need to use this polyfill if you have used html5 elements in your project.
 https://github.com/aFarkas/html5shiv

CDN ======> https://cdnjs.com/libraries/html5shiv/			https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js

==> It enables IE8 to support HTML 5 elements like <header> and <article> 
==> and you will need to use this polyfill if you have used html5 elements in your project.

4.5.2 { Selectivizr, CSS3 selectors for Internet Explorer}
http://selectivizr.com/

==> is a JavaScript utility that emulates CSS3 pseudo-classes and attribute selectors in Internet Explorer 6-8. 
Simply include the script in your pages and selectivizr will do the rest.

==> These pseudo-classes, like nth-child and last-child, have to be used to create smarter HTML layouts that can adjust itself when viewports changes.

4.5.2. 

4.5.3. REM Unit Polyfill
The REM-unit-polyfill is a polyfill for the REM unit. You will need this polyfill if you use the REM unit in your CSS.

https://github.com/chuckcarpenter/REM-unit-polyfill

CDN ====> https://cdnjs.com/libraries/rem				 https://cdnjs.cloudflare.com/ajax/libs/rem/1.3.4/js/rem.min.js


[Go Frontend#7] Вебинар Tech Skills 30.11.16	https://youtu.be/m8v6LEEiuQQ?t=155 


4.5.4	respond.js ==> https://github.com/scottjehl/Respond				https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js



Linking Around Block-Level El ements
by John Duckett /  HTML & CSS Design and Build Web Sites - 441page
----------------------------------------------------------------------------------------------------------------
* HTML5 allows web page authors to place an <a> element around
a block level element that contains child elements. This allows you to turn an entire block into a link.
* This is not a new element in HTML5, but it was not seen as a correct usage of the <a> element
in earlier versions of HTML.

* by MDN => The HTML Anchor Element (<a>) creates a hyperlink to other web pages, files, locations within the same page, 
email addresses, or any other URL.
* Permitted content	{ Transparent, containing either flow content (excluding interactive content) or phrasing content. }




{ July 27th, 2009 The Definitive Guide to Using Negative Margins By John Imbong }
https://www.smashingmagazine.com/2009/07/the-definitive-guide-to-using-negative-margins/



{ 	Browser's Vendor PREFIXe-s	}	*****************************************************************************
(1. "-prefix-free"
 => Break free from CSS prefix variety! => by Made by Lea Verou with care ( http://lea.verou.me/ )
http://leaverou.github.io/prefixfree/#

Only	2KB gzipped

-prefix-free lets you use only unprefixed CSS properties everywhere. It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.



2. <HTML5 PLEASE> 
======================================================
<HTML5 PLEASE> web-service @ http://html5please.com/

* Use the new and shiny responsibly.
* Look up HTML5, CSS3, etc features, know if they are ready for use, and if so find out how you should use them – with polyfills, fallbacks or as they are. tell me more

* !!!!!!!!! When 	a) "Can I Use" online-service tells you the browser support story, 
			b)while Modernizr gives you the power of feature detection. 

	====> <HTML5 Please> helps you out with recommendations for polyfills and implementation so you can decide if and how to put each of these features to use.

The recommendations below represent the collective knowledge of developers who have been deep in the HTML5 trenches. We hope they serve you well.

Read Divya's backstory about this site.



============================================== Modernizr @ www.modernizr.com
0. !!! Modernizr tells you what HTML, CSS and JavaScript features the user’s browser has to offer.

1. What is Modernizr?
It’s a collection of superfast tests – or “detects” as we like to call them – which run as your web page loads, then you can use the results to tailor the experience to the user.

2.Why do I need it?
All web developers come up against differences between browsers and devices. That’s largely due to different feature sets: the latest versions of the popular browsers can do some awesome things which older browsers can’t – but we still have to support the older ones.

3. odernizr makes it easy to deliver tiered experiences: make use of the latest and greatest features in browsers which support them, without leaving less fortunate users high and dry.



=================================== Node.js® @ www.nodejs.org
0 Node.js - is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.

1. Installing Node.js and updating npm
https://docs.npmjs.com/getting-started/installing-node

============================================= NPM - Node.js Package Manager (built-in) => Build amazing things !!!!!
0. npm is the default package manager for the JavaScript runtime environment Node.js.

1. npm ========> is the package manager for JavaScript. Find, share, and reuse packages of code from hundreds of thousands of developers — and assemble them in powerful new ways.



==============================================
Progressive enhancement на примере "формы входа (authorization)" (http://htmlacademy.ru/demos/1 )	from a russian article @ https://habrahabr.ru/post/157115/

Пример progressive Enhancement :: @ https://htmlacademy.ru/demos/1 
Финальные штрихи

Добавим странице красивый фон, созданный с помощью CSS-градиентов. Какая же мощная штука, эти градиенты! Фон взят из этой галереи.

Добавим форме небольшую тень и сделаем её фон слегка прозрачным. Обратите внимание, как именно задана прозрачность фона:

background:#f5f5f5;
background-color:rgba(245,245,245,0.95);

Сначала обычный фон, а затем фон в формате rgba. При таком подходе старые браузеры проигнорируют rgba и форма останется с непрозрачным серым фоном. Новые же браузеры заменят непрозрачный фон, на слегка прозрачный. Это отличный пример того, как работает progressive enhancement: ничего не сломав для старых браузеров, сделали красивей для новых.

Заключение

Форма готова. При желании её можно улучшать и улучшать с помощью CSS3 и JavaScript.

Подытожим, что же такое progressive enhancement. При этом подходе создание веб-интерфейса происходит поэтапно, от самого простого к сложному. Мы прошли три этапа:

Чистый HTML. Разметка и смысл.
CSS. Простое оформление.
CSS3. Оформление-конфетка.
Есть еще и четвертый этап: улучшение взаимодействия с помощью JavaScript. Например, можно было бы сделать отправку формы с помощью AJAX.

Самое главное в этом подходе, что код каждого последующего этапа накладывается на предыдущий как новый слой, ничего не ломая, а улучшая, если это возможно. Например, форма без AJAX всё равно отправится, форма в старом IE будет смотреться просто аккуратно, а форма без стилей всё равно останется рабочей формой и ей можно будет пользоваться.


=============================	SassMeister ===> http://www.sassmeister.com/about

SassMeister is a playground for Sass, Compass, and LibSass. Add some Sass and SassMeister will show you the rendered CSS. SassMeister supports both Sass and SCSS syntaxes, all output styles, and an ever-expanding list of Sass libraries.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

got from https://sassmeister.com/gist/6130742 => Mobile-first Responsive Web Design and IE8
The Guardian's responsive design team share some code to help make old browsers work with future-friendly CSS media queries

22 октября 2013 в 01:13
Разработка > Адаптивный дизайн и IE8
https://habrahabr.ru/post/198488

Перевод статьи в The Guardian Mobile-first Responsive Web Design and IE8 о разработке адаптивной версии онлайн-издания, точнее о способе реализации поддержки IE 8. Также советую посмотреть интересный Case Study процесса, это очень познавательно./
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





!!!!!!!!!!!!!!!	===========================================		If you are looking for a basic, out-of-the-box solution, you could use Respond.js.

https://teamtreehouse.com/community/media-queries-dont-work-in-ie8-and-earlier-any-way-to-get-around-this

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Media queries don't work in IE8 and earlier. Any way to get around this?

I know media queries were only incorporated into IE9 and above. Are there any solid ways (for professional use) to utilize a javascript pluggin or something that mimics the media queries in these earlier browsers?
http://getbootstrap.com/getting-started/#template
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I usually start a project with the conditional comment code that Twitter Bootstrap recommends in their sample template, and supplement with more nuanced solutions like Modernizer if needed.

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
The html5shiv is technically not needed for media queries, but if you are using modern techniques like media queries, you probably also should allow yourself the freedom to use HTML 5 elements as well. I've often seen them paired together.

This may not solve all your IE 8 support issues, but it's a good start.

Good luck.



=================================================== 	CSS3 Property Support in IE9
https://www.impressivewebs.com/css3-support-ie9/








========================== Browsers and Tools

1) Opera
------------------------------------------------------
Opera 15.0.1147.153 for Windows


Opera browser 15.0.1147.153

OVERView
{ Last update7 Aug. 2013 | old versions @ }
SOFT32.com ===> http://opera-web-browser.soft32.com/old-version/432931/15.0.1147.153/
OS Support { Windows 2000, Windows XP, Windows Server 2003, Windows Vista, 
			Windows 7, Windows 7 x64, Windows Vista x64, Windows XP x64, 
			Windows 8 }



http://www.opera.com/download/guide/?os=windows&ver=15.0.1147.153&local=y

http://get.geo.opera.com/pub/opera/desktop/15.0.1147.153/win/Opera_15.0.1147.153_Setup.exe

http://get.geo.opera.com/pub/opera/desktop/15.0.1147.153/win/Opera_15.0.1147.153_Setup.exe

Operating system

Windows
Please select your preferred version
http://www.opera.com/download/guide/?os=windows&list=all


2) Firefox


a) Install an older version of Firefox ...

https://support.mozilla.org/en-US/kb/install-older-version-of-firefox

b) Directory of other versions and languages
https://ftp.mozilla.org/pub/firefox/releases/

a) 5+

RELEASE NOTES
-----------------------------------------------------------------------------------------
What’s New in Firefox
The latest version of Firefox has the following changes:

* Added support for CSS animations
The Do-Not-Track header preference has been moved to increase discoverability
Tuned HTTP idle connection logic for increased performance
* Improved canvas, JavaScript, memory, and networking performance
* Improved standards support for HTML5, XHR, MathML, SMIL, and canvas
Improved spell checking for some locales
Improved desktop environment integration for Linux users
* WebGL content can no longer load cross-domain textures
Background tabs have setTimeout and setInterval clamped to 1000ms to improve performance
Fixed several stability issues
Fixed several security issues
----------------------------------------------------------------------------------------


v.5.0, offered to release channel users on June 21st, 2011
http://website-archive.mozilla.org/www.mozilla.org/firefox_releasenotes/en-US/firefox/5.0/releasenotes/

Index of /pub/firefox/releases/5.0/win32/en-GB/

Index of /pub/firefox/releases/5.0b7/win32/en-GB/
https://ftp.mozilla.org/pub/firefox/releases/5.0b7/win32/en-GB/

Index of /pub/firefox/releases/5.0.1/win32/en-GB/


3) Internet Explorers 8

Microsoft Internet Explorer 8.0 (IE8) continues the Internet Explorer commitment to provide enhanced security and privacy, 
additional browser features, and enhanced usability for platform developers. Faster, Easier, More Private, and More Secure.
SOFT32.com ===> 	http://internet-explorer-8.soft32.com/

What's New in Version 8.0 of Internet Explorer 8

- 64-Bit Downloads 
- Accelerators 
- Accessibility and ARIA 
- ActiveX Improvements 
- AJAX Enhancements 
- CSS Compliance 
- Developer Tools 
- Document Compatibility Mode 
- DOM Storage 
- HTML and DHTML Improvements 
- Mutable DOM Prototypes 
- Protected Mode Improvements 
- RSS Features 
- Search Suggestions 
- Security and Privacy 
- Selectors API 
- Web Slices 
- Zoom Enhancements 
- Related Topics








============= TOOLS
1) What browser am I using?
http://www.whatbrowser.org/intl/en_uk/


OUTDATED BROWSER
FOR A BETTER EXPERIENCE, KEEP YOUR BROWSER UP TO DATE. CHECK HERE FOR LATEST VERSIONS.
http://outdatedbrowser.com/en

BROWSE HAPPY
Online. Worry-free. Upgrade your browser today!
http://browsehappy.com/?locale=en

Browser-Update.org
An initiative by websites to inform users to update their web browser
https://browser-update.org/en/update.html?force_outdated=true

updatemybrowser.org


2) Microsoft Dev tools for the modern web
https://developer.microsoft.com/en-us/microsoft-edge/tools/






==================================
$ git config --global core.autocrlf false


============= Apache Vrtual Host config
Adding VirtualHost fails: Access Forbidden Error 403 (XAMPP) (Windows 7)
http://stackoverflow.com/questions/9110179/adding-virtualhost-fails-access-forbidden-error-403-xampp-windows-7/9117898#9117898

<VirtualHost dropbox.local:80>
    DocumentRoot "E:/Documenten/Dropbox/Dropbox/dummy-htdocs"
    ServerName dropbox.local
    ErrorLog "logs/dropbox.local-error.log"
    CustomLog "logs/dropbox.local-access.log" combined
    <Directory "E:/Documenten/Dropbox/Dropbox/dummy-htdocs">
        # AllowOverride All      # Deprecated
        # Order Allow,Deny       # Deprecated
        # Allow from all         # Deprecated

        # --New way of doing it
        Require all granted    
    </Directory>
</VirtualHost>

==========================================================

